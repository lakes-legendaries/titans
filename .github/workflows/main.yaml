name: Post-Main Merge

on:
  push:
    branches:
      - main

jobs:

  strongly-version:
    runs-on: ubuntu-latest
    environment: actions
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: main
        token: ${{ secrets.GIT_TOKEN }}
    - name: Configure git
      run: |
        git config --global user.name "version bot"
        git config --global user.email "<>"
    - name: Increment version, tag branch
      run: |
        OLD_VERSION=$(grep version titans/__init__.py | grep -Po "\d+.\d+.\d+")
        NEW_VERSION=$(echo $OLD_VERSION | perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e')
        for file in titans/__init__.py docsrc/conf.py; do
            sed s/$OLD_VERSION/$NEW_VERSION/g $file -i
            git add $file
        done
        git commit -m "Release $NEW_VERSION [no ci]"
        git tag $NEW_VERSION
    - name: Push to main
      run: |
        git push origin main:main -f
    - name: Push tag
      run: |
        VERSION=$(grep version titans/__init__.py | grep -Po "\d+.\d+.\d+")
        git push origin $VERSION

  build-docs:
    runs-on: ubuntu-latest
    environment: actions
    needs: version
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: main
        token: ${{ secrets.GIT_TOKEN }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
          python-version: 3.11
    - name: Configure git
      run: |
        git config --global user.name "docs bot"
        git config --global user.email "<>"
    - name: Update documentation
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        docsrc/build
    - name: Publish docs to GitHub pages (docs branch)
      run: |
        git add docs -f
        git commit docs -m "Updating Documentation"
        git push origin main:docs -f
